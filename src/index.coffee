canvas = document.getElementById('canvas')
ctx = canvas.getContext('2d')
imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);

neighbor = (n, dir, w, h) ->
    switch dir
      when 'L'
        n - 1
      when 'R'
        n + 1
      when 'U'
        n - w
      when 'D'
        n + w
      else
        alert 'direction??'

primeFactors = (n) ->
  factors = []
  divisor = 2
  while n >= 2
    if n % divisor == 0
      factors.push divisor
      n = n / divisor
    else
      divisor++
  factors

# HSL -> RGB
hsl = (h, s, l) ->
  s /= 100;
  l /= 100;
  k = (n) -> (n + h / 30) % 12;
  a = s * Math.min(l, 1 - l);
  f = (n) ->
    l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));
  [255 * f(0), 255 * f(8), 255 * f(4)];

# filter array k for f
get = (k,f) ->
  k.filter fnc = (a) -> a == f

isPrime = (num) ->
  if num < 2
    return false
  i = 2
  while i < num
    if num % i == 0
      return false
    i++
  true


putData = (xy,j,k) ->
#  for h in [1..Math.ceil(k.length/2)]
#    facts['factOf' + h] = get(k,h).length
###
  for h of globalPrimes
    if globalPrimes[h]>0 then break
###
  f2 = get(k,2).length < 6
  rgb = hsl(50,50,50*(f2))
  imageData.data[xy*4] = rgb[0] # red
  imageData.data[xy*4 + 1] = rgb[1] # green
  imageData.data[xy*4 + 2] = rgb[2] # blue
  imageData.data[xy*4 + 3] = 255 # alpha

nums = canvas.width*canvas.height
# allPrimes = primeFactorsTo(nums)
###
globalPrimes = []
for n in [2...nums/2]
  if isPrime(n) then globalPrimes.push(n)
for h of globalPrimes
  console.log globalPrimes[h]
  if globalPrimes[h]>10 then break
###
w = canvas.width
h = canvas.height
xy = w*h/2 + w/2 # start at mid
ct = 0
for j in [1..200] by 2
  for i in [1..j]
    ct++
    xy = neighbor(xy,'R',w,h)
    pf = primeFactors(ct)
    putData(xy,ct,pf)
  for i in [1..j]
    ct++
    xy = neighbor(xy,'D',w,h)
    pf = primeFactors(ct)
    putData(xy,ct,pf)
  for i in [1..j+1]
    ct++
    xy = neighbor(xy,'L',w,h)
    pf = primeFactors(ct)
    putData(xy,ct,pf)
  for i in [1..j+1]
    ct++
    xy = neighbor(xy,'U',w,h)
    pf = primeFactors(ct)
    putData(xy,ct,pf)

ctx.putImageData(imageData, 0, 0);

# ---
# generated by js2coffee 2.2.0
